{"version":3,"sources":["components/Filter/Filter.module.css","components/ContactForm/ContactForm.module.css","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactList.js","App.js","index.js","components/ContactList/ContactList.module.css"],"names":["module","exports","ContactForm","state","name","number","handlerChange","event","setState","target","value","onSaveContact","preventDefault","newContact","id","uuidv4","props","onSave","this","className","s","form","onSubmit","label","type","input","pattern","title","required","onChange","button","Component","Filter","filter","container","ContactList","list","deleteContact","map","tel","replace","item","href","onClick","App","contacts","newContactName","toUpperCase","find","alert","prevState","visibleContacts","search","contact","includes","deleteID","currentTarget","dataset","localContacts","localStorage","getItem","parsContacts","JSON","parse","prevProps","setItem","stringify","contactsList","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8IACAA,EAAOC,QAAU,CAAC,MAAQ,wB,uCCA1BD,EAAOC,QAAU,CAAC,KAAO,0BAA0B,MAAQ,2BAA2B,MAAQ,2BAA2B,OAAS,8B,sJCI5HC,E,4MACJC,MAAQ,CACNC,KAAM,GACNC,OAAQ,I,EAGVC,cAAgB,SAACC,GACf,EAAKC,SAAL,eACGD,EAAME,OAAOL,KAAOG,EAAME,OAAOC,S,EAItCC,cAAgB,SAACJ,GACfA,EAAMK,iBAEN,IAAMC,EAAa,CACjBC,GAAIC,cACJX,KAAM,EAAKD,MAAMC,KACjBC,OAAQ,EAAKF,MAAME,QAGrB,EAAKG,SAAS,CACZJ,KAAM,GACNC,OAAQ,KAGV,EAAKW,MAAMC,OAAOJ,I,4CAGpB,WACE,MAAyBK,KAAKf,MAAtBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,OAEd,OACE,uBAAMc,UAAWC,IAAEC,KAAMC,SAAUJ,KAAKP,cAAxC,UACE,wBAAOQ,UAAWC,IAAEG,MAApB,iBAEE,uBACEC,KAAK,OACLL,UAAWC,IAAEK,MACbrB,KAAK,OACLsB,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,EACRlB,MAAON,EACPyB,SAAUX,KAAKZ,mBAInB,wBAAOa,UAAWC,IAAEG,MAApB,mBAEE,uBACEC,KAAK,MACLL,UAAWC,IAAEK,MACbrB,KAAK,SACLsB,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,EACRlB,MAAOL,EACPwB,SAAUX,KAAKZ,mBAInB,wBAAQa,UAAWC,IAAEU,OAAQN,KAAK,SAAlC,gC,GA9DkBO,aA0EX7B,I,iBCpDA8B,MAxBf,YAA4C,IAA1BC,EAAyB,EAAzBA,OAAQ3B,EAAiB,EAAjBA,cACxB,OACE,yBAASa,UAAWC,IAAEc,UAAtB,SACE,yDAEE,uBACEV,KAAK,OACLL,UAAWC,IAAEK,MACbrB,KAAK,SACLsB,QAAQ,yHACRC,MAAM,kcACNjB,MAAOuB,EACPJ,SAAUvB,U,wBCmBL6B,MA9Bf,YAA+C,IAAxBC,EAAuB,EAAvBA,KAAMC,EAAiB,EAAjBA,cAC3B,OACE,oBAAIlB,UAAWC,IAAEgB,KAAjB,SACGA,EAAKE,KAAI,YAA2B,IAAxBxB,EAAuB,EAAvBA,GAAIV,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,OACfkC,EAAM,OAASlC,EAAOmC,QAAQ,YAAa,MACjD,OACE,qBAAIrB,UAAWC,IAAEqB,KAAjB,UACE,8BACGrC,EADH,KACU,mBAAGsC,KAAMH,EAAT,SAAelC,OAEzB,wBACEc,UAAWC,IAAEU,OACbN,KAAK,SACL,UAASV,EACT6B,QAASN,EAJX,SAME,cAAC,IAAD,QAVwBvB,SCLhC8B,E,4MACJzC,MAAQ,CACN0C,SAAU,GACVZ,OAAQ,I,EAmBV3B,cAAgB,SAACC,GACf,EAAKC,SAAL,eACGD,EAAME,OAAOL,KAAOG,EAAME,OAAOC,S,EAItCC,cAAgB,SAACE,GACf,IAAQgC,EAAa,EAAK1C,MAAlB0C,SACFC,EAAiBjC,EAAWT,KAAK2C,cAMvC,GAJqBF,EAASG,MAC5B,qBAAG5C,KAAgB2C,gBAAkBD,KAIrC,OAAOG,MAAM,GAAD,OAAIpC,EAAWT,KAAf,6BAGd,EAAKI,UAAS,SAAC0C,GAAD,MAAgB,CAC5BL,SAAS,CAAEhC,GAAH,mBAAkBqC,EAAUL,gB,EAIxCM,gBAAkB,WAChB,IAAMC,EAAS,EAAKjD,MAAM8B,OAAOc,cACjC,OAAO,EAAK5C,MAAM0C,SAASZ,QAAO,SAACoB,GAAD,OAChCA,EAAQjD,KAAK2C,cAAcO,SAASF,O,EAIxCf,cAAgB,SAAC9B,GACf,IAAIgD,EAAWhD,EAAMiD,cAAcC,QAAQ3C,GAE3C,EAAKN,UAAS,SAAC0C,GAAD,MAAgB,CAC5BL,SAAUK,EAAUL,SAASZ,QAAO,YAClC,OAD8C,EAATnB,KACvByC,U,uDAnDpB,WACE,IAAMG,EAAgBC,aAAaC,QAAQ,aACrCC,EAAeC,KAAKC,MAAML,GAC5BG,GACF3C,KAAKV,SAAS,CACZqC,SAAUgB,M,gCAKhB,SAAmBG,EAAWd,GACxBA,EAAUL,WAAa3B,KAAKf,MAAM0C,UACpCc,aAAaM,QAAQ,YAAaH,KAAKI,UAAUhD,KAAKf,MAAM0C,a,oBA4ChE,WACE,IAAQZ,EAAWf,KAAKf,MAAhB8B,OACFkC,EAAejD,KAAKiC,kBAE1B,OACE,sBAAKhC,UAAU,YAAf,UACE,2CACA,cAAC,EAAD,CAAaF,OAAQC,KAAKP,gBAE1B,0CACA,cAAC,EAAD,CAAQsB,OAAQA,EAAQ3B,cAAeY,KAAKZ,gBAC5C,cAAC,EAAD,CAAa8B,KAAM+B,EAAc9B,cAAenB,KAAKmB,uB,GAzE3CN,aA+EHa,I,MC/EfwB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCR1BxE,EAAOC,QAAU,CAAC,KAAO,0BAA0B,KAAO,0BAA0B,OAAS,+B","file":"static/js/main.103e4663.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__2DoVp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1fuOn\",\"label\":\"ContactForm_label__378f8\",\"input\":\"ContactForm_input__gm87B\",\"button\":\"ContactForm_button__1MLZK\"};","import { Component } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport PropTypes from \"prop-types\";\nimport s from \"./ContactForm.module.css\";\n\nclass ContactForm extends Component {\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n\n  handlerChange = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  onSaveContact = (event) => {\n    event.preventDefault();\n\n    const newContact = {\n      id: uuidv4(),\n      name: this.state.name,\n      number: this.state.number,\n    };\n\n    this.setState({\n      name: \"\",\n      number: \"\",\n    });\n\n    this.props.onSave(newContact);\n  };\n\n  render() {\n    const { name, number } = this.state;\n\n    return (\n      <form className={s.form} onSubmit={this.onSaveContact}>\n        <label className={s.label}>\n          Name\n          <input\n            type=\"text\"\n            className={s.input}\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            value={name}\n            onChange={this.handlerChange}\n          />\n        </label>\n\n        <label className={s.label}>\n          Number\n          <input\n            type=\"tel\"\n            className={s.input}\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n            value={number}\n            onChange={this.handlerChange}\n          />\n        </label>\n\n        <button className={s.button} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nContactForm.propTypes = {\n  onSave: PropTypes.func.isRequired,\n};\n\nexport default ContactForm;\n","import PropTypes from \"prop-types\";\nimport s from \"./Filter.module.css\";\n\nfunction Filter({ filter, handlerChange }) {\n  return (\n    <section className={s.container}>\n      <label>\n        Find contact by name\n        <input\n          type=\"text\"\n          className={s.input}\n          name=\"filter\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          value={filter}\n          onChange={handlerChange}\n        />\n      </label>\n    </section>\n  );\n}\n\nFilter.propTypes = {\n  filter: PropTypes.string,\n  handlerChange: PropTypes.func,\n};\n\nexport default Filter;\n","import PropTypes from \"prop-types\";\nimport { IoCloseCircleSharp } from \"react-icons/io5\";\nimport s from \"./ContactList.module.css\";\n\nfunction ContactList({ list, deleteContact }) {\n  return (\n    <ul className={s.list}>\n      {list.map(({ id, name, number }) => {\n        const tel = `tel:` + number.replace(/^(\\+)|\\D/g, \"$1\");\n        return (\n          <li className={s.item} key={id}>\n            <p>\n              {name}: <a href={tel}>{number}</a>\n            </p>\n            <button\n              className={s.button}\n              type=\"button\"\n              data-id={id}\n              onClick={deleteContact}\n            >\n              <IoCloseCircleSharp />\n            </button>\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\n\nContactList.propTypes = {\n  list: PropTypes.arrayOf(PropTypes.object),\n  deleteContact: PropTypes.func,\n};\n\nexport default ContactList;\n","import React, { Component } from \"react\";\nimport ContactForm from \"./components/ContactForm/ContactForm\";\nimport Filter from \"./components/Filter/Filter\";\nimport ContactList from \"./components/ContactList/ContactList\";\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: \"\",\n  };\n\n  componentDidMount() {\n    const localContacts = localStorage.getItem(\"phonebook\");\n    const parsContacts = JSON.parse(localContacts);\n    if (parsContacts) {\n      this.setState({\n        contacts: parsContacts,\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.contacts !== this.state.contacts) {\n      localStorage.setItem(\"phonebook\", JSON.stringify(this.state.contacts));\n    }\n  }\n\n  handlerChange = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  onSaveContact = (newContact) => {\n    const { contacts } = this.state;\n    const newContactName = newContact.name.toUpperCase();\n\n    const knownContact = contacts.find(\n      ({ name }) => name.toUpperCase() === newContactName\n    );\n\n    if (knownContact) {\n      return alert(`${newContact.name} is already in contacts.`);\n    }\n\n    this.setState((prevState) => ({\n      contacts: [newContact, ...prevState.contacts],\n    }));\n  };\n\n  visibleContacts = () => {\n    const search = this.state.filter.toUpperCase();\n    return this.state.contacts.filter((contact) =>\n      contact.name.toUpperCase().includes(search)\n    );\n  };\n\n  deleteContact = (event) => {\n    let deleteID = event.currentTarget.dataset.id;\n\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter(({ id }) => {\n        return id !== deleteID;\n      }),\n    }));\n  };\n\n  render() {\n    const { filter } = this.state;\n    const contactsList = this.visibleContacts();\n\n    return (\n      <div className=\"container\">\n        <h1>Phonebook</h1>\n        <ContactForm onSave={this.onSaveContact} />\n\n        <h2>Contacts</h2>\n        <Filter filter={filter} handlerChange={this.handlerChange} />\n        <ContactList list={contactsList} deleteContact={this.deleteContact} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2T7aG\",\"item\":\"ContactList_item__3YsZK\",\"button\":\"ContactList_button__1RuFy\"};"],"sourceRoot":""}